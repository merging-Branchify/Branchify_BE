plugins {
	id 'java'
	id 'org.springframework.boot' version '3.3.4'
	id 'io.spring.dependency-management' version '1.1.6'
}

group = 'com.merging'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(21)
	}
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
//	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
////	implementation 'org.springframework.boot:spring-boot-starter-security'
//	implementation 'org.springframework.boot:spring-boot-starter-web'
//	compileOnly 'org.projectlombok:lombok'
//	//developmentOnly 'org.springframework.boot:spring-boot-devtools'
//	runtimeOnly 'com.mysql:mysql-connector-j'
////	runtimeOnly 'mysql:mysql-connector-java:8.0.34'
//	annotationProcessor 'org.projectlombok:lombok'
//	testImplementation 'org.springframework.boot:spring-boot-starter-test'
////	testImplementation 'org.springframework.security:spring-security-test'
//	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
//	implementation 'org.springframework.boot:spring-boot-starter-webflux'
//	implementation 'org.json:json:20210307'
//	implementation 'com.fasterxml.jackson.core:jackson-databind'
//	implementation 'org.springframework.boot:spring-boot-starter-validation'
//	implementation 'com.slack.api:bolt:1.44.1'
//	// Slack API 클라이언트와 모델 (이미 socket-mode에 포함되어 있지만 명시적으로 추가 가능)
//	implementation 'com.slack.api:slack-api-client:1.44.2'
//	implementation 'com.slack.api:bolt-socket-mode:1.44.2'
//	//implementation 'com.slack.api:slack-api-model:1.44.1'
//	implementation 'org.springframework.boot:spring-boot-starter'
//	implementation 'org.glassfish.tyrus.bundles:tyrus-standalone-client:2.1.0'
//	implementation 'jakarta.websocket:jakarta.websocket-api:2.0.0'
//	implementation 'org.springframework.boot:spring-boot-starter-websocket'
//	implementation 'org.slf4j:slf4j-simple:1.7.36'
	dependencies {
		// Spring Boot
		implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
		implementation 'org.springframework.boot:spring-boot-starter-web'
		implementation 'org.springframework.boot:spring-boot-starter-validation'
		implementation 'org.springframework.boot:spring-boot-starter-websocket'

		// Lombok
		compileOnly 'org.projectlombok:lombok'
		annotationProcessor 'org.projectlombok:lombok'

		// MySQL
		runtimeOnly 'com.mysql:mysql-connector-j'

		// JSON 처리
		implementation 'org.json:json:20210307'
		implementation 'com.fasterxml.jackson.core:jackson-databind'

		// Slack Bolt & Socket Mode
		implementation 'com.slack.api:bolt:1.44.2'
		implementation 'com.slack.api:bolt-socket-mode:1.44.2'

		// WebSocket API & 구현체
		implementation 'javax.websocket:javax.websocket-api:1.1' // Java EE 7 WebSocket API
		implementation 'org.glassfish.tyrus.bundles:tyrus-standalone-client:1.17' // Tyrus 구현체
//		implementation 'javax.websocket:javax.websocket-api:2.1.0' // Jakarta API로 통일
//		implementation 'org.glassfish.tyrus.bundles:tyrus-standalone-client:2.1.0' // Jakarta WebSocket 구현체

		// SLF4J for logging
		implementation 'org.slf4j:slf4j-simple:1.7.36'

		// 테스트
		testImplementation 'org.springframework.boot:spring-boot-starter-test'
		testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
	}
}

tasks.named('test') {
	useJUnitPlatform()
}

